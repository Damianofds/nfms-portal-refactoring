{"version":3,"sources":["webpack:///webpack/bootstrap 2374df4beb704e95fb02","webpack:///./src/app.ts","webpack:///./src/time-slider.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,iBAAgB,uCAAuC;AACvD;AACA,kBAAiB;AACjB;AACA;AACA;AACA,oBAAmB;AACnB,mBAAkB;AAClB,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,sMAAsM;AAC7Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,iGAAgG,oCAAoC,EAAE;AACtI;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,yDAAwD,qDAAqD,EAAE;AAC/G;AACA;AACA,0BAAyB,EAAE,UAAU,EAAE,UAAU,EAAE;AACnD,2BAA0B,EAAE,SAAS,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,cAAc;AAC7D,EAAC;AACD;AACA,uPAAsP;AACtP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,kBAAkB,sBAAsB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAAwI,EAAE,0BAA0B;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,QAAQ,UAAU,WAAW,YAAY,UAAU;AAC5H;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA,wEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,kCAAiC;AACjC;AACA,kCAAiC;AACjC;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA,+DAA8D;AAC9D;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0CAAyC;AACzC;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,0BAA0B;AAC1D,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,8EAA8E;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,iCAAiC;AAC/E;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA,gCAA+B,4BAA4B,EAAE;AAC7D,oCAAmC,2DAA2D,EAAE;AAChG,sCAAqC,eAAe,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS,2DAA2D;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,2EAA0E,qBAAqB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/4BA;AACA;AACA;AACA;AACA,mEAAkE,4CAA4C,EAAE;AAChH,gDAA+C,iCAAiC,EAAE,EAAE;AACpF;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2374df4beb704e95fb02\n **/","// OpenLayers.ProxyHost = \"proxy?url=\";\n// OpenLayers.ImgPath = \"images/openlayers/\";\n\"use strict\";\nvar time_slider_1 = require('./time-slider');\n// declare var UNREDD;\n// declare var messages;\n// interface Date {\n//   setISO8601(a: string): boolean;\n// }\nvar languageCode = 'en', // TODO\nlayers_json = {}; // TODO\nvar messages = { data_source: \"Source\", months: null }; // TODO\nvar UNREDD = {\n    allLayers: {},\n    visibleLayers: [],\n    queryableLayers: [],\n    timeDependentLayers: [],\n    mapContexts: {},\n    fb_toolbar: {},\n    stats_toolbar: {},\n    times: [],\n    Layer: null,\n    wmsServers: [],\n    Context: null,\n    maxResolution: null,\n    maxExtent: null,\n    restrictedExtent: null,\n    map: null,\n    layerInfo: null,\n    customInit: null\n};\n// class Layer {\n//   name: string; // TODO rename as id\n//   configuration: layersJson.Layer;\n//   constructor(layerDefinition: layersJson.Layer) {\n//     this.name = layerDefinition.id;\n//     this.configuration = layerDefinition;\n//   }\n//   test() {\n//     return \"Hello, \" + this.name;\n//   }\n// }\nUNREDD.Layer = function (layerId, layerDefinition) {\n    this.name = layerId;\n    this.configuration = layerDefinition;\n    // set WMS servers urls\n    var baseUrl = layerDefinition.baseUrl, urls = [];\n    if ((/^http:/).test(baseUrl)) {\n        // If LayerDefinition is an absolute URL, don't use UNREDD.wmsServers\n        urls = [baseUrl];\n    }\n    else {\n        var urlsLength = UNREDD.wmsServers.length;\n        for (var i = 0; i < urlsLength; i++) {\n            var server = UNREDD.wmsServers[i];\n            urls.push(server + baseUrl);\n        }\n    }\n    // Set WMS paramaters that are common to all layers\n    var wmsParams = { layers: layerDefinition.wmsName, format: layerDefinition.imageFormat, transparent: true };\n    // Add custom wms parameters\n    var wmsParameters = layerDefinition.wmsParameters;\n    for (var paramName in wmsParameters) {\n        if (wmsParameters.hasOwnProperty(paramName)) {\n            wmsParams[paramName] = wmsParameters[paramName];\n        }\n    }\n    // Create the OpenLayers object for this layer\n    this.olLayer = new OpenLayers.Layer.WMS(layerId, urls, wmsParams, { transitionEffect: 'resize', removeBackBufferDelay: 0, isBaseLayer: false, 'buffer': 0, visibility: layerDefinition.visible === 'true', projection: 'EPSG:900913', noMagic: true, wrapDateLine: true });\n};\nUNREDD.Context = function (contextId, contextDefinition) {\n    var nLayers = 0;\n    this.name = contextId;\n    this.configuration = contextDefinition;\n    // this.layers = [];\n    this.setVisibility = function (active) {\n        var _this = this;\n        this.layers.forEach(function (layer) {\n            layer.olLayer.setVisibility(active);\n            _this.configuration.active = active;\n        });\n    };\n    this.layers = contextDefinition.layers ? contextDefinition.layers.map(function (layerName) { return UNREDD.allLayers[layerName]; }) : [];\n    // TODO: is this needed?\n    // this.layers.forEach(layerName => {\n    //   if (contextDefinition.layersCustomParams && contextDefinition.layersCustomParams[layerName]) {\n    //     UNREDD.allLayers[layerName].olLayer.mergeNewParams(contextDefinition.layersCustomParams[layerName]);\n    //   }\n    // });\n    this.hasLegend = this.layers.some(function (layer) { return layer.configuration.hasOwnProperty('legend'); });\n};\nDate.prototype['setISO8601'] = function (string) {\n    var regexp = \"([0-9]{4})(-([0-9]{2})(-([0-9]{2})\" +\n        \"(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?\", d = string.match(new RegExp(regexp));\n    if (d) {\n        var date = new Date(+d[1], 0, 1), offset = 0, time = void 0;\n        if (d[3]) {\n            date.setMonth(+d[3] - 1);\n        }\n        if (d[5]) {\n            date.setDate(+d[5]);\n        }\n        if (d[7]) {\n            date.setHours(+d[7]);\n        }\n        if (d[8]) {\n            date.setMinutes(+d[8]);\n        }\n        if (d[10]) {\n            date.setSeconds(+d[10]);\n        }\n        if (d[12]) {\n            date.setMilliseconds(Number(\"0.\" + d[12]) * 1000);\n        }\n        if (d[14]) {\n            offset = (Number(d[16]) * 60) + Number(d[17]);\n            offset *= ((d[15] === '-') ? 1 : -1);\n        }\n        offset -= date.getTimezoneOffset();\n        time = (Number(date) + (offset * 60 * 1000));\n        this.setTime(Number(time));\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nvar isoDateString = function (d) {\n    // 2000-01-01T00:00:00.000Z\n    function pad(n) {\n        return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-'\n        + pad(d.getUTCMonth() + 1) + '-'\n        + pad(d.getUTCDate()) + 'T'\n        + pad(d.getUTCHours()) + ':'\n        + pad(d.getUTCMinutes()) + ':'\n        + pad(d.getUTCSeconds()) + '.'\n        + pad(d.getUTCMilliseconds()) + 'Z';\n};\n$(document).ready(function () {\n    // disable text selection on Explorer (done with CSS in other browsers)\n    document.body.onselectstart = function () { return false; };\n});\n$(window).load(function () {\n    var parseLayersJson, openLayersOptions, styleMap, highlightLayer, showInfo, setLayersTime, selectedDate, legendOn = false, year, infoControl, getClosestPastDate, getClosestFutureDate, getLocalizedDate, updateActiveLayersPane, mapContexts = {}, setContextVisibility, resizeMapDiv;\n    // Set map div height\n    resizeMapDiv = function () {\n        var bannerHeight = $('#banner').height() + $('#toolbar').height();\n        $('#map').css('top', bannerHeight);\n        $('#map').css('height', $(window).height() - bannerHeight);\n        $('#map').css('width', $(window).width());\n    };\n    $(window).resize(function () {\n        resizeMapDiv();\n    });\n    resizeMapDiv();\n    setContextVisibility = function (context, active) {\n        context.setVisibility(active);\n        var icon = $(\"#\" + context.name + \"_inline_legend_icon\");\n        if (active) {\n            icon.addClass('on');\n            icon.click(function (event) {\n                openLegend($('#' + context.name + '_legend'));\n                event.stopPropagation();\n                return false;\n            });\n        }\n        else {\n            icon.removeClass('on');\n            icon.off('click');\n            icon.click(function (event) {\n                event.stopPropagation();\n                return false;\n            });\n        }\n    };\n    // Initialize UNREDD.wmsServers to this same server, in case it is not defined or empty\n    if (!UNREDD.wmsServers || typeof UNREDD.wmsServers === \"undefined\" || !UNREDD.wmsServers.length) {\n        UNREDD[\"wmsServers\"] = [\"\"];\n    }\n    ;\n    openLayersOptions = {\n        theme: null,\n        projection: new OpenLayers.Projection(\"EPSG:900913\"),\n        displayProjection: new OpenLayers.Projection(\"EPSG:4326\"),\n        units: \"m\",\n        maxResolution: UNREDD.maxResolution,\n        maxExtent: UNREDD.maxExtent,\n        restrictedExtent: UNREDD.restrictedExtent,\n        allOverlays: true,\n        controls: [\n            new OpenLayers.Control.Navigation({ dragPanOptions: { enableKinetic: true } }),\n            new OpenLayers.Control.Scale()\n        ]\n    };\n    UNREDD.map = new OpenLayers.Map('map', openLayersOptions);\n    parseLayersJson = function (layersDef) {\n        var setupAllContexts, setLegends;\n        // Create layers objects\n        layersDef.layers.forEach(function (layerDefinition) {\n            var layerId = layerDefinition.id, layer = new UNREDD.Layer(layerId, layerDefinition), oldIsoTimeRegexp = new RegExp(\"([0-9]{4})-01-01T00:00:00\\\\.000Z\"); /** See wmsTime hack **/\n            if (layerDefinition.visible) {\n                UNREDD.visibleLayers.push(layer.olLayer);\n            }\n            UNREDD.allLayers[layerId] = layer;\n            if (layerDefinition.queryable) {\n                UNREDD.queryableLayers.push(layer.olLayer);\n            }\n            if (typeof layer.configuration.wmsTime !== 'undefined') {\n                /** Backwards-compatibility: convert former ISO times to simple years **/\n                var times = layer.configuration.wmsTime.split(\",\");\n                for (var i = 0; i < times.length; i++) {\n                    var match = times[i].match(oldIsoTimeRegexp);\n                    if (match) {\n                        times[i] = match[1];\n                    }\n                }\n                layer.configuration.wmsTime = times.join(\",\");\n                UNREDD.timeDependentLayers.push(layer);\n            }\n        });\n        // Create context objects\n        layersDef.contexts.forEach(function (contextDefinition) {\n            var contextId = contextDefinition.id, context = new UNREDD.Context(contextId, contextDefinition);\n            UNREDD.mapContexts[contextId] = context;\n        });\n        var contextGroups = layersDef.contextGroups;\n        setupAllContexts = function () {\n            // look for active contexts\n            $.each(UNREDD.mapContexts, function (contextName, context) {\n                var active = typeof context.configuration.active !== 'undefined' && context.configuration.active;\n                setContextVisibility(context, active);\n            });\n        };\n        updateActiveLayersPane = function () {\n            var table, tr, td, td2, layers, inlineLegend, transparencyDiv;\n            // empty the active_layers div (layer on the UI -> context here)\n            $('#active_layers_pane div').empty();\n            table = $('<table style=\"width:90%;margin:auto\"></table>');\n            $('#active_layers_pane div').append(table);\n            $.each(UNREDD.mapContexts, function (contextName, context) {\n                var contextConf = context.configuration;\n                if (contextConf.active) {\n                    // First row: inline legend and context name\n                    tr = $('<tr></tr>');\n                    if (contextConf.inlineLegendUrl) {\n                        td = $('<td style=\"width:20px\"></td>');\n                        inlineLegend = $('<img class=\"inline-legend\" src=\"' + UNREDD.wmsServers[0] + contextConf.inlineLegendUrl + '\">');\n                        td.append(inlineLegend);\n                        tr.append(td);\n                        td2 = $('<td></td>');\n                    }\n                    else {\n                        td2 = $('<td colspan=\"2\"></td>');\n                    }\n                    td2.append(contextConf.label);\n                    tr.append(td2);\n                    table.append(tr);\n                    // Another row\n                    tr = $('<tr></tr>');\n                    transparencyDiv = $('<div style=\"margin-top:4px; margin-bottom:12px;\" id=\"' + contextName + '_transparency_slider\"></div>');\n                    td = $('<td colspan=\"2\"></td>');\n                    td.append(transparencyDiv);\n                    tr.append(td);\n                    table.append(tr);\n                    layers = contextConf.layers;\n                    (function (contextLayers) {\n                        $(transparencyDiv).slider({\n                            min: 0,\n                            max: 100,\n                            value: 100,\n                            slide: function (event, ui) {\n                                $.each(contextLayers, function (n, layer) {\n                                    layer.olLayer.setOpacity(ui.value / 100);\n                                });\n                            }\n                        });\n                    }(context.layers));\n                }\n            });\n        };\n        // Add the legend images to the legend pane.\n        // This implementation works only if two contexts don't have a layer in common.\n        // A better implementation would have to scan all the active contexts and see which layers should be visible\n        setLegends = function (context, contextIsActive) {\n            context.layers.forEach(function (layer) {\n                var layerConf = layer.configuration, table, legendName;\n                if (layerConf.visible && layerConf.legend) {\n                    //legendFile = layerDef.legend;\n                    legendName = context.name + '_legend';\n                    if (!contextIsActive) {\n                        $('#' + legendName).remove();\n                    }\n                    else {\n                        table = '<table class=\"layer_legend\" id=\"' + legendName + '\">';\n                        table += '<tr class=\"legend_header\">';\n                        table += '<td class=\"layer_name\">' + layerConf.label + '</td>';\n                        if (layerConf.sourceLink) {\n                            table += '<td class=\"data_source_link\"><span class=\"lang\" id=\"data_source\">' + messages.data_source + ':</span> <a target=\"_blank\" href=\"' + layerConf.sourceLink + '\">' + layerConf.sourceLabel + '</a></td>';\n                        }\n                        else {\n                            table += \"<td></td>\";\n                        }\n                        table += '</tr>';\n                        table += '<tr class=\"legend_image\">';\n                        table += '<td colspan=\"2\" style=\"width:100%;background-color:white\"><img src=\"static/loc/' + languageCode + '/images/' + layerConf.legend + '\" /></td>';\n                        table += '</tr>';\n                        table += '</table>';\n                    }\n                    $('#legend_pane_content').append(table);\n                }\n            });\n        };\n        // Though recursive and ready for n level groupings with some adjustments, this function\n        // is meant to work with three level grouping of contexts\n        // TODO: use some templating engine?\n        var loadContextGroups = function (contextGroups, level, element) {\n            $.each(contextGroups.items, function (contextGroupName, contextGroupDefinition) {\n                var infoButton;\n                if (contextGroupDefinition.group) {\n                    var innerElement = null;\n                    // it's a group\n                    if (level === 0) {\n                        var accordionHeader = void 0;\n                        // it's an accordion header\n                        if (!!contextGroupDefinition.group.infoFile) {\n                            // accordion header has a info file - we add info button\n                            accordionHeader = $(\"<div style=\\\"position:relative\\\" class=\\\"accordion_header\\\"><a style=\\\"width:190px\\\" href=\\\"#\\\">\" + contextGroupDefinition.group.label + \"</a></div>\");\n                            infoButton = $(\"<a style=\\\"position:absolute;top:3px;right:7px;width:16px;height:16px;padding:0;\\\" class=\\\"layer_info_button\\\" href=\\\"static/loc/\" + languageCode + \"/html/\" + contextGroupDefinition.group.infoFile + \"\\\"></a>\");\n                            accordionHeader.append(infoButton);\n                            // prevent accordion item from expanding when clicking on the info button\n                            infoButton.click(function (event) {\n                                event.stopPropagation();\n                            });\n                            infoButton.fancybox({\n                                'autoScale': false,\n                                'openEffect': 'elastic',\n                                'closeEffect': 'elastic',\n                                'type': 'ajax',\n                                'overlayOpacity': 0.5\n                            });\n                        }\n                        else {\n                            accordionHeader = $(\"<div class=\\\"accordion_header\\\"><a href=\\\"#\\\">\" + contextGroupDefinition.group.label + \"</a></div>\");\n                        }\n                        element.append(accordionHeader);\n                        var contextsDiv = $('<div class=\"context_buttonset\"></div>');\n                        innerElement = $('<table style=\"width:100%;border-collapse:collapse\"></table>');\n                        contextsDiv.append(innerElement);\n                        element.append(contextsDiv);\n                    }\n                    else {\n                        // we are inside of an accordion element\n                        var header = $(\"<div><a style=\\\"color:white;\\\" href=\\\"#\\\">\" + contextGroupDefinition.group.label + \"</a></div>\");\n                        element.append(header);\n                        innerElement = $('<table class=\"second_level\" style=\"width:100%\"></table>');\n                        element.append(innerElement);\n                    }\n                    loadContextGroups(contextGroupDefinition.group, level + 1, innerElement);\n                }\n                else {\n                    // it's a context in a group\n                    if (element !== null) {\n                        var contextName = contextGroupDefinition.context, active_1 = UNREDD.mapContexts[contextName].configuration.active, context_1 = UNREDD.mapContexts[contextName], contextConf = context_1.configuration, tr = void 0, td1 = void 0, td2 = void 0, td3 = void 0, td4 = void 0;\n                        if (typeof context_1 !== 'undefined' && typeof context_1.configuration.layers !== 'undefined') {\n                            tr = $('<tr class=\"layer_row\">');\n                            if (contextConf.inlineLegendUrl) {\n                                // context has an inline legend\n                                var inlineLegend = $(\"<img class=\\\"inline-legend\\\" src=\\\"\" + (UNREDD.wmsServers[0] + contextConf.inlineLegendUrl) + \"\\\">\");\n                                td1 = $('<td style=\"width:20px\">');\n                                td1.append(inlineLegend);\n                            }\n                            else if (context_1.hasLegend) {\n                                // context has a legend to be shown on the legend pane - we add a link to show the legend pane\n                                if (active_1) {\n                                    td1 = $(\"<td style=\\\"font-size:9px;width:20px;height:20px\\\"><a id=\\\"\" + contextName + \"_inline_legend_icon\\\" class=\\\"inline_legend_icon on\\\"></a></td>\");\n                                    // add the legend to the legend pane (hidden when page loads)\n                                    setLegends(context_1, true);\n                                }\n                                else {\n                                    td1 = $(\"<td style=\\\"font-size:9px;width:20px;height:20px\\\"><a id=\\\"\" + contextName + \"_inline_legend_icon\\\" class=\\\"inline_legend_icon\\\"></a></td>\");\n                                }\n                            }\n                            else {\n                                td1 = $('<td></td>');\n                            }\n                            var checkbox = $(\"<div class=\\\"checkbox\\\" id=\\\"\" + contextName + \"_checkbox\\\"></div>\");\n                            if (active_1) {\n                                checkbox.addClass('checked');\n                            }\n                            td2 = $('<td style=\"width:16px\"></td>');\n                            td2.append(checkbox);\n                            td3 = $('<td style=\"color:#FFF\">');\n                            td3.text(contextConf.label);\n                            // Add date for label if time dependant layer\n                            var layerName = context_1.configuration.layers[0];\n                            if (UNREDD.allLayers[layerName].configuration.wmsTime) {\n                                var datespan = $(\"<span id=\\\"\" + layerName + \"_date\\\"></span>\\\"\");\n                                td3.append(datespan);\n                            }\n                            td4 = $('<td style=\"width:16px;padding:0\">');\n                            if (typeof contextConf.infoFile !== 'undefined') {\n                                infoButton = $(\"<a class=\\\"layer_info_button\\\" id=\\\"\" + contextName + \"_info_button\\\" href=\\\"static/loc/\" + languageCode + \"/html/\" + contextConf.infoFile + \"\\\"></a>\");\n                                td4.append(infoButton);\n                            }\n                            if (td1) {\n                                tr.append(td1);\n                            }\n                            tr.append(td2, td3, td4);\n                            element.append(tr);\n                            (function (element) {\n                                // emulate native checkbox behaviour\n                                element.mousedown(function () {\n                                    element.addClass('mousedown');\n                                }).mouseup(function () {\n                                    element.removeClass('mousedown');\n                                }).mouseleave(function () {\n                                    element.removeClass('in');\n                                }).mouseenter(function () {\n                                    element.addClass('in');\n                                }).click(function () {\n                                    element.toggleClass('checked');\n                                    active_1 = !active_1;\n                                    setContextVisibility(context_1, active_1);\n                                    setLegends(context_1, active_1);\n                                    updateActiveLayersPane(mapContexts);\n                                });\n                            }(checkbox));\n                        }\n                        else if (typeof contextConf !== \"undefined\") {\n                            tr = $('<tr style=\"font-size:10px;height:22px\">');\n                            td1 = $('<td style=\"color:#FFF\" colspan=\"3\">');\n                            td1.text(contextConf.label);\n                            td2 = $('<td style=\"width:16px;padding:0\">');\n                            infoButton = $(\"<a class=\\\"layer_info_button\\\" id=\\\"\" + contextName + \"_info_button\\\" href=\\\"static/loc/\" + languageCode + \"/html/\" + contextConf.infoFile + \"\\\"></a>\");\n                            td2.append(infoButton);\n                            tr.append(td1, td2);\n                            element.append(tr);\n                        }\n                        if (typeof infoButton !== \"undefined\") {\n                            infoButton.fancybox({\n                                'autoScale': false,\n                                'openEffect': 'elastic',\n                                'closeEffect': 'elastic',\n                                'type': 'ajax',\n                                'overlayOpacity': 0.5\n                            });\n                        }\n                    }\n                }\n            });\n        };\n        loadContextGroups(contextGroups, 0, $(\"#layers_pane\"));\n        $(\"#layers_pane\").accordion({\n            collapsible: true,\n            autoHeight: false,\n            header: \".accordion_header\",\n            animated: false\n        });\n        if (getURLParameter('layer_pane') !== 'off') {\n            $(\"#layers_pane\").show();\n        }\n        setupAllContexts();\n        // create info dialog\n        var selectedFeatures = {};\n        $(\"#info_popup\").dialog({\n            closeOnEscape: true,\n            //height: 170,\n            //minHeight: 400,\n            //maxHeight: 800,\n            width: 300,\n            zIndex: 2000,\n            resizable: false,\n            close: function (event, ui) {\n                // destroy all features\n                $.each(selectedFeatures, function (layerId, feature) {\n                    feature.destroy();\n                });\n            },\n            autoOpen: false\n        });\n        showInfo = function (evt, infoHTML) {\n            var x = evt.xy.x - 100, y = evt.xy.y - 200, i, feature, featureType, nSelectedFeatures = 0, infoPopup = $(\"#info_popup\");\n            highlightLayer.destroyFeatures();\n            selectedFeatures = {};\n            if (evt.features && evt.features.length) {\n                var viewportExtent = UNREDD.map.getExtent();\n                // re-project to Google projection\n                for (i = 0; i < evt.features.length; i++) {\n                    if (evt.features[i].geometry) {\n                        evt.features[i].geometry.transform(new OpenLayers.Projection(\"EPSG:4326\"), new OpenLayers.Projection(\"EPSG:900913\"));\n                        // don't select it if most of the polygon falls outside of the viewport\n                        if (!viewportExtent.scale(1.3).containsBounds(evt.features[i].geometry.getBounds())) {\n                            continue;\n                        }\n                    }\n                    feature = evt.features[i];\n                    featureType = feature.gml.featureType;\n                    selectedFeatures[featureType] = feature;\n                    nSelectedFeatures += 1;\n                }\n                infoPopup.empty();\n                // handle custom popup - info will be taken from json but for now it's in the custom.js. Don't have time\n                var customPopupLayer = null;\n                $.each(selectedFeatures, function (layerId, feature) {\n                    // check for each layer selected if one of them has a custom popup implementation in custom.js, \n                    // otherwise will be shown\n                    if (typeof (UNREDD.layerInfo[layerId]) != \"undefined\") {\n                        var info = UNREDD.layerInfo[layerId](feature);\n                        if (typeof (info.customPopup) != \"undefined\") {\n                            customPopupLayer = layerId;\n                            info.customPopup();\n                            $.fancybox({\n                                href: '#custom_popup'\n                            });\n                            return false; // only show the custom info dialog for the first layer that has it\n                        }\n                    }\n                    return true;\n                });\n                if (customPopupLayer !== null) {\n                    //infoPopup.dialog('close');\n                    return;\n                }\n                var flag_1 = true;\n                $.each(selectedFeatures, function (layerId, feature) {\n                    var table, info, td1, td2, td3, tr1, tr2, tr3;\n                    if (UNREDD.layerInfo.hasOwnProperty(layerId)) {\n                        info = UNREDD.layerInfo[layerId](feature);\n                    }\n                    else {\n                        // That's an horrible system to avoid that the HTML generate by geoserver will be displayed more than one time.\n                        // ISSUE 1 : the content can be positioned in the middle of stats section (better show all stats link then the getFeaturesInfo)\n                        // ISUE 2 : JUST ONE BUTTON FOR EACH FEATURE!!! Generate it server side!\n                        if (flag_1) {\n                            flag_1 = false;\n                            info = infoHTML; //genericInfoContent(feature);\n                        }\n                        else {\n                            info = \"\";\n                            return true;\n                        }\n                    }\n                    table = $(\"<table>\");\n                    tr1 = $(\"<tr/>\");\n                    td1 = $('<td colspan=\"2\" class=\"area_name\" />');\n                    tr1.append(td1);\n                    table.append(tr1);\n                    table.mouseover(function () {\n                        highlightLayer.removeAllFeatures();\n                        highlightLayer.addFeatures(feature);\n                        highlightLayer.redraw();\n                    });\n                    table.mouseout(function () {\n                        highlightLayer.removeAllFeatures();\n                        highlightLayer.redraw();\n                    });\n                    td1.append(info);\n                    tr2 = $(\"<tr/>\");\n                    td2 = $(\"<td class=\\\"td_left\\\"/>\");\n                    tr2.append(td2);\n                    table.append(tr2);\n                    // TODO: localize statistics and zoom to area buttons\n                    // Check if the info object contains the stats link method. If not, don't append the stats. \n                    if (typeof (info.statsLink) == \"function\") {\n                        td2.append(\"<a style=\\\"color:white\\\" class=\\\"feature_link fancybox.iframe\\\" id=\\\"stats_link_\" + layerId + \"\\\" href=\\\"\" + info.statsLink() + \"\\\">Statistics</a>\");\n                    }\n                    td3 = $(\"<td class=\\\"td_right\\\"/>\");\n                    td3.append(\"<a style=\\\"color:white\\\" class=\\\"feature_link\\\" href=\\\"#\\\" id=\\\"zoom_to_feature_\" + layerId + \"\\\">Zoom to area</a>\");\n                    tr2.append(td3);\n                    infoPopup.append(table);\n                    $('#stats_link_' + layerId).fancybox({\n                        maxWidth: 840,\n                        maxHeight: 600,\n                        fitToView: false,\n                        width: 840,\n                        height: 590,\n                        autoSize: false,\n                        closeClick: false,\n                        openEffect: 'none',\n                        closeEffect: 'fade'\n                    });\n                    if (info.info && info.info()) {\n                        tr3 = $(\"<tr/>\");\n                        td3 = $(\"<td class=\\\"td_left\\\" colspan=\\\"2\\\"/>\");\n                        tr3.append(td3);\n                        table.append(tr3);\n                        td3.append(info.info());\n                    }\n                    $('#drivers_data_link').fancybox({\n                        'autoScale': false,\n                        'type': 'iframe',\n                        'scrolling': 'no',\n                        'width': 500,\n                        'height': 600,\n                        'openEffect': 'none',\n                        'closeEffect': 'fade'\n                    });\n                    $(\"#zoom_to_feature_\" + layerId).click(function () {\n                        UNREDD.map.zoomToExtent(feature.geometry.getBounds().scale(1.2));\n                    });\n                });\n            }\n            var totalHeight = 0;\n            // If no features selected then close the dialog        \n            if (nSelectedFeatures == 0) {\n                infoPopup.dialog('close');\n            }\n            else {\n                // Don't reposition the dialog if already open\n                if (!infoPopup.dialog('isOpen')) {\n                    infoPopup.dialog('option', 'position', [x, y]);\n                    // Finally open the dialog\n                    infoPopup.dialog('open');\n                }\n                $.each($('#info_popup table'), function (id, elem) {\n                    totalHeight += $(elem).height() + 12;\n                });\n                infoPopup.dialog('option', 'height', totalHeight /* + 35*/);\n            }\n        };\n    };\n    $.ajax({\n        url: \"src/layers.json\",\n        type: \"GET\",\n        dataType: \"json\",\n        contentType: \"application/json; charset=utf-8\"\n    }).then(function (res) {\n        parseLayersJson(res);\n        setupTimeSlider();\n    });\n    /*\n    $.ajax({\n      url: 'layers.json',\n      dataType: 'json',\n      async: false,\n      cache: false,\n      success: function(data_) { parse_layers_json(data_); }\n    });\n    */\n    // setup various UI elements\n    $(\"#legend_pane\").dialog({\n        position: ['right', 'bottom'],\n        closeOnEscape: false,\n        height: 300,\n        minHeight: 400,\n        maxHeight: 400,\n        width: 430,\n        zIndex: 2000,\n        resizable: false,\n        close: function (event, ui) {\n            legendOn = false;\n        }\n    });\n    var openLegend = function (scrollToId) {\n        if (!legendOn) {\n            $(\"#legend_pane\").dialog('open');\n        }\n        legendOn = true;\n        if (scrollToId) {\n            $(\"#legend_pane\").animate({ scrollTop: scrollToId.offset().top - $('#legend_pane_content').offset().top }, 'slow');\n        }\n    };\n    var closeLegend = function () {\n        $(\"#legend_pane\").dialog('close');\n        legendOn = false;\n    };\n    $(\"#legend_pane\").dialog('close'); // using autoOpen, it doesn't show when you click the button - don't have time\n    $(\"#toggle_legend\").click(function () {\n        if (!legendOn) {\n            openLegend(false);\n        }\n        else {\n            closeLegend();\n        }\n        return false;\n    });\n    $(\"#layer_list_selector_pane\").buttonset();\n    if (getURLParameter('layer_pane') !== 'off') {\n        $(\"#layer_list_selector_pane\").show();\n    }\n    $(\"#all_layers\").click(function () {\n        $(\"#layers_pane\").show();\n        $(\"#active_layers_pane\").hide();\n    });\n    $(\"#active_layers\").click(function () {\n        $(\"#layers_pane\").hide();\n        $(\"#active_layers_pane\").accordion({\n            collapsible: false,\n            autoHeight: false,\n            animated: false,\n            create: function (event, ui) {\n                $('#active_layers_pane .ui-icon-triangle-1-s').hide();\n                updateActiveLayersPane(mapContexts);\n            }\n        });\n        if (getURLParameter('layer_pane') !== 'off') {\n            $(\"#active_layers_pane\").show();\n        }\n    });\n    // Time slider management\n    getClosestPastDate = function (date, dateArray, layer) {\n        var result = null, dateInArray, i, d;\n        for (i = 0; i < dateArray.length; i++) {\n            dateInArray = dateArray[i];\n            if (date >= dateInArray && (result === null || result < dateInArray)) {\n                result = dateInArray;\n                d = i;\n            }\n        }\n        layer.selectedDate = layer.configuration.wmsTime.split(\",\")[d];\n        return result;\n    };\n    getClosestFutureDate = function (date, dateArray, layer) {\n        var result = null, dateInArray, i, d;\n        for (i = 0; i < dateArray.length; i++) {\n            dateInArray = dateArray[i];\n            if (date <= dateInArray && (result === null || result > dateInArray)) {\n                result = dateInArray;\n                d = i;\n            }\n        }\n        layer.selectedDate = layer.configuration.wmsTime.split(\",\")[d];\n        return result;\n    };\n    getLocalizedDate = function (date) {\n        var months = messages.months ? eval(messages.months) : [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"June\", \"July\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Des.\"], arr = date.split(\"-\");\n        if (arr[1])\n            arr[1] = months[arr[1] - 1];\n        return arr.reverse().join(\" \");\n    };\n    setLayersTime = function (selectedDate) {\n        // loop through layers to see if they are time dependent'type': 'iframe',\n        $.each(UNREDD.timeDependentLayers, function (layerName, layer) {\n            var sDates, dates = [], i, d, newDate, layerInfo = layer.configuration;\n            // parse the wmsTime string\n            sDates = layerInfo.wmsTime.split(\",\");\n            for (i = 0; i < sDates.length; i++) {\n                d = new Date();\n                if (d.setISO8601(sDates[i])) {\n                    dates.push(d);\n                }\n            }\n            if (dates.length) {\n                newDate = getClosestPastDate(selectedDate, dates, layer);\n                if (newDate === null) {\n                    newDate = getClosestFutureDate(selectedDate, dates, layer);\n                }\n                layer.olLayer.mergeNewParams({ 'time': isoDateString(newDate) });\n                $(\"#\" + layer.name + \"_date\").text(\" (\" + getLocalizedDate(layer.selectedDate) + \")\");\n                UNREDD.map.events.triggerEvent(\"changelayer\", {\n                    layer: layer.olLayer,\n                    selectedDate: layer.selectedDate,\n                    property: \"time\"\n                });\n            }\n        });\n    };\n    var setupTimeSlider = function () {\n        var wmsTimes = Object.keys(UNREDD.allLayers)\n            .map(function (k) { return UNREDD.allLayers[k]; }) // get object values\n            .map(function (layer) { return layer.configuration && layer.configuration.wmsTime; })\n            .filter(function (time) { return !!time; });\n        var timeSlider = new time_slider_1.default(wmsTimes);\n        if (false) {\n            var timesObj = {};\n            for (var layer in UNREDD.allLayers) {\n                var layerTimes = UNREDD.allLayers[layer].configuration.wmsTime;\n                if (layerTimes) {\n                    layerTimes = layerTimes.split(\",\");\n                    for (var i in layerTimes) {\n                        var datetime = new Date();\n                        datetime.setISO8601(layerTimes[i]);\n                        timesObj[layerTimes[i]] = 0; // Put it in an object to avoid duplicate dates.\n                    }\n                }\n            }\n            for (var time in timesObj) {\n                UNREDD.times.push(time);\n            }\n            UNREDD.times.sort();\n            // Create time slider\n            if (UNREDD.times.length) {\n                $(\"#time_slider_label\").text(getLocalizedDate(UNREDD.times[UNREDD.times.length - 1]));\n                $(\"#time_slider\").slider({\n                    min: 0,\n                    max: UNREDD.times.length - 1,\n                    value: UNREDD.times[UNREDD.times.length - 1].replace(/\\-/g, \"\"),\n                    slide: function (event, ui) {\n                        $(\"#time_slider_label\").text(getLocalizedDate(UNREDD.times[ui.value]));\n                    },\n                    change: function (event, ui) {\n                        var d = new Date();\n                        d.setISO8601(UNREDD.times[ui.value]);\n                        setLayersTime(d);\n                    }\n                });\n                // Init layers time\n                var datestr = UNREDD.times[$(\"#time_slider\").slider(\"value\")], selectedDate_1 = new Date();\n                selectedDate_1.setISO8601(datestr);\n                setLayersTime(selectedDate_1);\n            }\n            else {\n                $(\"#time_slider_pane\").hide();\n            }\n        }\n    };\n    // Info click handler\n    // Perform getFeatureInfo requesting GML outputformat to get the geometry\n    var ouptputGetFeatureInfoGML;\n    infoControl = new OpenLayers.Control.WMSGetFeatureInfo({\n        url: UNREDD.wmsServers[0],\n        title: 'Identify features by clicking',\n        layers: UNREDD.queryableLayers,\n        queryVisible: true,\n        infoFormat: 'application/vnd.ogc.gml',\n        hover: false,\n        drillDown: true,\n        maxFeatures: 5,\n        handlerOptions: {\n            \"click\": {\n                'single': true,\n                'double': false\n            }\n        },\n        eventListeners: {\n            getfeatureinfo: function (evt) {\n                if (evt.features && evt.features.length) {\n                    ouptputGetFeatureInfoGML = evt;\n                    infoAsHTML = UNREDD.map.getControl(\"infoAsHTML\");\n                    infoAsHTML.activate();\n                    infoAsHTML.request(evt.xy);\n                    infoAsHTML.deactivate();\n                }\n            }\n        },\n        formatOptions: {\n            typeName: 'XXX', featureNS: 'http://www.openplans.org/unredd'\n        }\n    });\n    UNREDD.map.addControl(infoControl);\n    infoControl.activate();\n    // Perform getFeatureInfo requesting HTML outputformat to get the HTML template\n    var infoAsHTML = new OpenLayers.Control.WMSGetFeatureInfo({\n        url: UNREDD.wmsServers[0],\n        title: 'Display feature\\'s HTML template by clicking on it',\n        layers: UNREDD.queryableLayers,\n        queryVisible: true,\n        infoFormat: 'text/html',\n        hover: false,\n        drillDown: true,\n        maxFeatures: 5,\n        handlerOptions: {\n            \"click\": {\n                'single': true,\n                'double': false\n            }\n        },\n        eventListeners: {\n            getfeatureinfo: function (evt) {\n                showInfo(ouptputGetFeatureInfoGML, evt.text);\n            }\n        },\n        formatOptions: {\n            typeName: 'XXX', featureNS: 'http://www.openplans.org/unredd'\n        }\n    });\n    infoAsHTML.id = \"infoAsHTML\";\n    UNREDD.map.addControl(infoAsHTML);\n    UNREDD.map.addLayers(UNREDD.visibleLayers);\n    //var wikimapia = new OpenLayers.Layer.Wikimapia( \"Wikimapia\",\n    //  { sphericalMercator: true, isBaseLayer: false, 'buffer': 0 });\n    //map.addLayer(wikimapia);\n    // StyleMap for the highlight layer\n    styleMap = new OpenLayers.StyleMap({\n        'strokeWidth': 5,\n        fillOpacity: 0,\n        strokeColor: '#ee4400',\n        strokeOpacity: 0.5,\n        strokeLinecap: 'round' });\n    highlightLayer = new OpenLayers.Layer.Vector(\"Highlighted Features\", { styleMap: styleMap });\n    UNREDD.map.addLayer(highlightLayer);\n    $(\"#disclaimer_popup\").fancybox({\n        'width': 600,\n        'height': 400,\n        'autoScale': true,\n        'openEffect': 'fade',\n        'closeEffect': 'none',\n        'type': 'ajax'\n    });\n    if (UNREDD.customInit != undefined) {\n        UNREDD.customInit();\n    }\n});\n// given a feature this method create a html snippets to show its getFeatureInfo results\nfunction genericInfoContent(feature) {\n    var ret = \"<div><table>\";\n    $.each(feature.attributes, function (index, attribute) {\n        ret += \"<tr><td>\" + index + \"</td><td>\" + attribute + \"</td></tr>\";\n        return true;\n    });\n    ret += \"</table></div>\";\n    return {\n        title: function () {\n            return ret;\n        }\n    };\n}\nfunction getURLParameter(name) {\n    return decodeURI((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, null])[1]);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.ts\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\nvar TimeSlider = (function () {\n    function TimeSlider(wmsTimes) {\n        // wmsTimes is an array of comma-separated years\n        var times = wmsTimes.reduce(function (previous, current) { return previous.concat(current.split(',')); }, [])\n            .filter(function (elem, pos, arr) { return arr.indexOf(elem) == pos; }); // remove duplicate dates\n    }\n    return TimeSlider;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TimeSlider;\n// var timesObj = {};\n// for (let layer in UNREDD.allLayers) {\n//   var layerTimes = UNREDD.allLayers[layer].configuration.wmsTime;\n//   if (layerTimes) {\n//     layerTimes = layerTimes.split(\",\");\n//     for (let i in layerTimes) {\n//       var datetime = new Date();\n//       datetime.setISO8601(layerTimes[i]);\n//       timesObj[layerTimes[i]] = 0; // Put it in an object to avoid duplicate dates.\n//     }\n//   }\n// }\n// for (let time in timesObj) {\n//   UNREDD.times.push(time);\n// }\n// UNREDD.times.sort();\n// // Create time slider\n// if (UNREDD.times.length) {\n//   $(\"#time_slider_label\").text(getLocalizedDate(UNREDD.times[UNREDD.times.length-1]));\n//   $(\"#time_slider\").slider({\n//     min: 0,\n//     max: UNREDD.times.length-1,\n//     value: UNREDD.times[UNREDD.times.length-1].replace(/\\-/g,\"\"),\n//     slide: function(event, ui) {\n//       $(\"#time_slider_label\").text(getLocalizedDate(UNREDD.times[ui.value]));\n//     },\n//     change: function(event, ui) {\n//       var d = new Date();\n//       d.setISO8601(UNREDD.times[ui.value]);\n//       setLayersTime(d);\n//     }\n//   });\n//   // Init layers time\n//   let datestr = UNREDD.times[$(\"#time_slider\").slider(\"value\")],\n//       selectedDate = new Date();\n//   selectedDate.setISO8601(datestr);\n//   setLayersTime(selectedDate);\n// } else {\n//   $(\"#time_slider_pane\").hide();\n// }\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/time-slider.ts\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}